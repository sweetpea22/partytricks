{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseToWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "selectWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerSelected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x033e6ae39aea8b7bef98359befeac0dd94c1b0381ed01cd43fb8ca3aa27765de",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "422236",
    "logsBloom": "0x
    "blockHash": "0xf647bd7a3d76fee898e27c91ae97990d601017c4c4609421903cc999701413c5",
    "transactionHash": "0x033e6ae39aea8b7bef98359befeac0dd94c1b0381ed01cd43fb8ca3aa27765de",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x033e6ae39aea8b7bef98359befeac0dd94c1b0381ed01cd43fb8ca3aa27765de",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf647bd7a3d76fee898e27c91ae97990d601017c4c4609421903cc999701413c5"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "422236",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8a2f4a3d36d391ecbfc0ebac6ca1b576",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseToWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"selectWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSelected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Escrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Escrow is Ownable {\\n    address public winner; // The address of the winner\\n    bool public winnerSelected; // Flag to indicate if the winner is selected\\n    uint256 public escrowAmount; // Total funds collected\\n    \\n    constructor() {\\n        winnerSelected = false;\\n    }\\n    \\n    modifier onlyWinner() {\\n        require(msg.sender == winner, \\\"Only the winner can call this function\\\");\\n        _;\\n    }\\n    \\n    modifier notWinnerSelected() {\\n        require(!winnerSelected, \\\"Winner has already been selected\\\");\\n        _;\\n    }\\n    \\n    function deposit() external payable {\\n        require(!winnerSelected, \\\"Winner has already been selected\\\");\\n        escrowAmount += msg.value;\\n    }\\n\\n    \\n    function selectWinner(address _winner) external onlyOwner notWinnerSelected {\\n        require(_winner != address(0), \\\"Invalid winner address\\\");\\n        winner = _winner;\\n        winnerSelected = true;\\n    }\\n    \\n    function releaseToWinner() external onlyWinner {\\n        require(winnerSelected, \\\"Winner has not been selected yet\\\");\\n        require(address(this).balance > 0, \\\"No funds to withdraw\\\");\\n        uint256 amountToSend = escrowAmount;\\n        escrowAmount = 0; // Reset total funds after sending to the winner\\n        payable(winner).transfer(amountToSend);\\n\\n    }\\n\\n    function retrieve() public view returns (uint256) {\\n        return escrowAmount;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x65d72fae1e6214de241171c262ed64912cb746c1f9e447d42f1d22b25104975a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002c565b6001805460ff60a01b1916905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61062c8061008b6000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610138578063cfe1c5b31461016a578063d0e30db01461017f578063dfbf53ae14610187578063f2fde38b146101a757600080fd5b806312856e6f146100965780632e64cec1146100b857806347a7846f146100dc578063715018a6146100f25780638d38281214610107575b600080fd5b3480156100a257600080fd5b506100b66100b13660046105a0565b6101c7565b005b3480156100c457600080fd5b506002545b6040519081526020015b60405180910390f35b3480156100e857600080fd5b506100c960025481565b3480156100fe57600080fd5b506100b66102a4565b34801561011357600080fd5b5060015461012890600160a01b900460ff1681565b60405190151581526020016100d3565b34801561014457600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100d3565b34801561017657600080fd5b506100b66102b8565b6100b661040a565b34801561019357600080fd5b50600154610152906001600160a01b031681565b3480156101b357600080fd5b506100b66101c23660046105a0565b61047d565b6101cf6104f6565b600154600160a01b900460ff161561022e5760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c656374656460448201526064015b60405180910390fd5b6001600160a01b03811661027d5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077696e6e6572206164647265737360501b6044820152606401610225565b600180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b6102ac6104f6565b6102b66000610550565b565b6001546001600160a01b031633146103215760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79207468652077696e6e65722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608401610225565b600154600160a01b900460ff1661037a5760405162461bcd60e51b815260206004820181905260248201527f57696e6e657220686173206e6f74206265656e2073656c6563746564207965746044820152606401610225565b600047116103c15760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606401610225565b6002805460009182905560015460405191926001600160a01b039091169183156108fc0291849190818181858888f19350505050158015610406573d6000803e3d6000fd5b5050565b600154600160a01b900460ff16156104645760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c65637465646044820152606401610225565b346002600082825461047691906105d0565b9091555050565b6104856104f6565b6001600160a01b0381166104ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610225565b6104f381610550565b50565b6000546001600160a01b031633146102b65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610225565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105b257600080fd5b81356001600160a01b03811681146105c957600080fd5b9392505050565b600082198211156105f157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220b199205be62e31780734f70b21c11ad24bca6d09d56743b19a2e86fad424622064736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b14610138578063cfe1c5b31461016a578063d0e30db01461017f578063dfbf53ae14610187578063f2fde38b146101a757600080fd5b806312856e6f146100965780632e64cec1146100b857806347a7846f146100dc578063715018a6146100f25780638d38281214610107575b600080fd5b3480156100a257600080fd5b506100b66100b13660046105a0565b6101c7565b005b3480156100c457600080fd5b506002545b6040519081526020015b60405180910390f35b3480156100e857600080fd5b506100c960025481565b3480156100fe57600080fd5b506100b66102a4565b34801561011357600080fd5b5060015461012890600160a01b900460ff1681565b60405190151581526020016100d3565b34801561014457600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100d3565b34801561017657600080fd5b506100b66102b8565b6100b661040a565b34801561019357600080fd5b50600154610152906001600160a01b031681565b3480156101b357600080fd5b506100b66101c23660046105a0565b61047d565b6101cf6104f6565b600154600160a01b900460ff161561022e5760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c656374656460448201526064015b60405180910390fd5b6001600160a01b03811661027d5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077696e6e6572206164647265737360501b6044820152606401610225565b600180546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b6102ac6104f6565b6102b66000610550565b565b6001546001600160a01b031633146103215760405162461bcd60e51b815260206004820152602660248201527f4f6e6c79207468652077696e6e65722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608401610225565b600154600160a01b900460ff1661037a5760405162461bcd60e51b815260206004820181905260248201527f57696e6e657220686173206e6f74206265656e2073656c6563746564207965746044820152606401610225565b600047116103c15760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606401610225565b6002805460009182905560015460405191926001600160a01b039091169183156108fc0291849190818181858888f19350505050158015610406573d6000803e3d6000fd5b5050565b600154600160a01b900460ff16156104645760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c65637465646044820152606401610225565b346002600082825461047691906105d0565b9091555050565b6104856104f6565b6001600160a01b0381166104ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610225565b6104f381610550565b50565b6000546001600160a01b031633146102b65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610225565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105b257600080fd5b81356001600160a01b03811681146105c957600080fd5b9392505050565b600082198211156105f157634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220b199205be62e31780734f70b21c11ad24bca6d09d56743b19a2e86fad424622064736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "winner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 143,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "winnerSelected",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 145,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "escrowAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
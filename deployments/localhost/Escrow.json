{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newWinner",
          "type": "address"
        }
      ],
      "name": "addWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrowAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSplit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releasePrize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winnerSelected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x7859de956c23df4ab5a5c508d53acf9e7db9a28de14b722f627f8d74cf7f3357",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "429803",
    "logsBloom": "0x
    "blockHash": "0x55b3c890232e8650c69ea04024bc0c37c3a4929f7c5fba4380bc35244a09848c",
    "transactionHash": "0x7859de956c23df4ab5a5c508d53acf9e7db9a28de14b722f627f8d74cf7f3357",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x7859de956c23df4ab5a5c508d53acf9e7db9a28de14b722f627f8d74cf7f3357",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x55b3c890232e8650c69ea04024bc0c37c3a4929f7c5fba4380bc35244a09848c"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "429803",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "95c1d07d251440d7b0adebb9928303b5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWinner\",\"type\":\"address\"}],\"name\":\"addWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSplit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releasePrize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerSelected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Escrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Escrow is Ownable {\\n    address[] public winners;    // Array of winners\\n    bool public winnerSelected; // Flag to indicate if the winner is selected\\n    bool public isSplit; // Flag to indicate if the winner is selected\\n    uint256 public escrowAmount; // Total funds collected\\n    \\n    constructor() {\\n        winnerSelected = false;\\n        isSplit = false;\\n    }\\n    \\n    modifier notWinnerSelected() {\\n        require(!winnerSelected, \\\"Winner has already been selected\\\");\\n        _;\\n    }\\n    \\n    function deposit() external payable {\\n        require(!winnerSelected, \\\"Winner has already been selected\\\");\\n        escrowAmount += msg.value;\\n    }\\n\\n    function addWinner(address _newWinner) external onlyOwner {\\n        winners.push(_newWinner);\\n        winnerSelected = true;\\n    }\\n\\n    function releasePrize() external payable onlyOwner {\\n        require(msg.value > 0, \\\"No funds sent with the transaction\\\");\\n        require(winners.length > 0, \\\"No winners specified\\\");\\n\\n        uint256 amountToSend = msg.value;\\n        if (winners.length == 2) {\\n            amountToSend /= 2;\\n        } \\n\\n        for (uint256 i = 0; i < winners.length; i++) {\\n            payable(winners[i]).transfer(amountToSend);\\n        }\\n    }\\n\\n    function retrieve() public view returns (uint256) {\\n        return escrowAmount;\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0x88e79c2e78df74b0bacf5eea8883a7bd05d9dbcb10d1d9cadedd4c85cf6e8134\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361002a565b6002805461ffff1916905561007a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610650806100896000396000f3fe60806040526004361061009c5760003560e01c8063788097bf11610064578063788097bf1461011a5780638d382812146101495780638da5cb5b14610163578063a2fb117514610195578063d0e30db0146101b5578063f2fde38b146101bd57600080fd5b80630dbdd37d146100a1578063297f407b146100ab5780632e64cec1146100cb57806347a7846f146100ef578063715018a614610105575b600080fd5b6100a96101dd565b005b3480156100b757600080fd5b506100a96100c6366004610550565b61031d565b3480156100d757600080fd5b506003545b6040519081526020015b60405180910390f35b3480156100fb57600080fd5b506100dc60035481565b34801561011157600080fd5b506100a9610383565b34801561012657600080fd5b5060025461013990610100900460ff1681565b60405190151581526020016100e6565b34801561015557600080fd5b506002546101399060ff1681565b34801561016f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100e6565b3480156101a157600080fd5b5061017d6101b0366004610580565b610397565b6100a96103c1565b3480156101c957600080fd5b506100a96101d8366004610550565b61042d565b6101e56104a6565b600034116102455760405162461bcd60e51b815260206004820152602260248201527f4e6f2066756e64732073656e74207769746820746865207472616e736163746960448201526137b760f11b60648201526084015b60405180910390fd5b60015461028b5760405162461bcd60e51b8152602060048201526014602482015273139bc81dda5b9b995c9cc81cdc1958da599a595960621b604482015260640161023c565b6001543490600214156102a6576102a36002826105af565b90505b60005b60015481101561031957600181815481106102c6576102c66105d1565b60009182526020822001546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610306573d6000803e3d6000fd5b5080610311816105e7565b9150506102a9565b5050565b6103256104a6565b60018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0393909316929092179091556002805460ff19169091179055565b61038b6104a6565b6103956000610500565b565b600181815481106103a757600080fd5b6000918252602090912001546001600160a01b0316905081565b60025460ff16156104145760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c6563746564604482015260640161023c565b34600360008282546104269190610602565b9091555050565b6104356104a6565b6001600160a01b03811661049a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023c565b6104a381610500565b50565b6000546001600160a01b031633146103955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161023c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561056257600080fd5b81356001600160a01b038116811461057957600080fd5b9392505050565b60006020828403121561059257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000826105cc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006000198214156105fb576105fb610599565b5060010190565b6000821982111561061557610615610599565b50019056fea2646970667358221220188d01e6da89803bce6d9d83ae94a98298afdf8f24cdb9f92f97b84f5bc22c5364736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c8063788097bf11610064578063788097bf1461011a5780638d382812146101495780638da5cb5b14610163578063a2fb117514610195578063d0e30db0146101b5578063f2fde38b146101bd57600080fd5b80630dbdd37d146100a1578063297f407b146100ab5780632e64cec1146100cb57806347a7846f146100ef578063715018a614610105575b600080fd5b6100a96101dd565b005b3480156100b757600080fd5b506100a96100c6366004610550565b61031d565b3480156100d757600080fd5b506003545b6040519081526020015b60405180910390f35b3480156100fb57600080fd5b506100dc60035481565b34801561011157600080fd5b506100a9610383565b34801561012657600080fd5b5060025461013990610100900460ff1681565b60405190151581526020016100e6565b34801561015557600080fd5b506002546101399060ff1681565b34801561016f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100e6565b3480156101a157600080fd5b5061017d6101b0366004610580565b610397565b6100a96103c1565b3480156101c957600080fd5b506100a96101d8366004610550565b61042d565b6101e56104a6565b600034116102455760405162461bcd60e51b815260206004820152602260248201527f4e6f2066756e64732073656e74207769746820746865207472616e736163746960448201526137b760f11b60648201526084015b60405180910390fd5b60015461028b5760405162461bcd60e51b8152602060048201526014602482015273139bc81dda5b9b995c9cc81cdc1958da599a595960621b604482015260640161023c565b6001543490600214156102a6576102a36002826105af565b90505b60005b60015481101561031957600181815481106102c6576102c66105d1565b60009182526020822001546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610306573d6000803e3d6000fd5b5080610311816105e7565b9150506102a9565b5050565b6103256104a6565b60018054808201825560008290527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b0393909316929092179091556002805460ff19169091179055565b61038b6104a6565b6103956000610500565b565b600181815481106103a757600080fd5b6000918252602090912001546001600160a01b0316905081565b60025460ff16156104145760405162461bcd60e51b815260206004820181905260248201527f57696e6e65722068617320616c7265616479206265656e2073656c6563746564604482015260640161023c565b34600360008282546104269190610602565b9091555050565b6104356104a6565b6001600160a01b03811661049a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023c565b6104a381610500565b50565b6000546001600160a01b031633146103955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161023c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561056257600080fd5b81356001600160a01b038116811461057957600080fd5b9392505050565b60006020828403121561059257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000826105cc57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60006000198214156105fb576105fb610599565b5060010190565b6000821982111561061557610615610599565b50019056fea2646970667358221220188d01e6da89803bce6d9d83ae94a98298afdf8f24cdb9f92f97b84f5bc22c5364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 142,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "winners",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 144,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "winnerSelected",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 146,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "isSplit",
        "offset": 1,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 148,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "escrowAmount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}